name: Docker Build and Test

on:
  push:
    branches:
      - "main"
      - "pull-request/[0-9]+"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Run linting
      run: |
        pip install flake8
        flake8 .
  
  build:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/nemo-test:${{ github.sha }}
          cache-from: |
            type=gha,scope=${{ github.workflow }}
            type=gha,scope=${{ github.workflow }},ref=refs/heads/main
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}

  test:
    runs-on: linux-amd64-cpu8
    needs: build
    container:
      image: ghcr.io/${{ github.repository }}/nemo-test:${{ github.sha }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    env:
      # NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_FILES_USERNAME }}
      AZURE_STORAGE_KEY: ${{ secrets.AZURE_FILES_PASSWORD }}
    steps:    
    - name: Mount test data
      run: |
        mkdir -p /tmp/nemo-models
        blobfuse2 mount /tmp/nemo-models \
          --config-file=none \
          --container-name=fileshare \
          --tmp-path=/tmp/blobfuse

    - name: Run tests
      run: |
        ls /mnt/datadrive
        mkdir -p /tmp/nemo-models
        cp /mnt/datadrive/TestData/nemo2_ckpt/Llama3Config8B/pytorch_model.bin /tmp/nemo-models/pytorch_model.bin
        ls -alh /tmp/nemo-models/pytorch_model.bin
        pytest

    - name: Cleanup Azure Files mount
      if: always()
      run: |
        fusermount -u /tmp/nemo-models
