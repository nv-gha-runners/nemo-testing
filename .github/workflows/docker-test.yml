name: Docker Build and Test

on:
  push:
    branches:
      - "main"
      - "pull-request/[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/nemo-test:${{ github.sha }}
          cache-from: |
            type=gha,scope=${{ github.workflow }}
            type=gha,scope=${{ github.workflow }},ref=refs/heads/main
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}

  lint:
    runs-on: ubuntu-latest
    needs: build
    container:
      image: ghcr.io/${{ github.repository }}/nemo-test:${{ github.sha }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    steps:
    - name: Run linting
      working-directory: /app
      run: |
        flake8 .

  test:
    runs-on: linux-amd64-gpu-l4-latest-1
    needs: lint
    container:
      image: ghcr.io/${{ github.repository }}/nemo-test:${{ github.sha }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
    env:
      NVIDIA_VISIBLE_DEVICES: ${{ env.NVIDIA_VISIBLE_DEVICES }}
      AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_FILES_USERNAME }}
      AZURE_STORAGE_KEY: ${{ secrets.AZURE_FILES_PASSWORD }}
    steps:    
    - name: Download test data
      working-directory: /app
      run: |
        ls -alh
        mkdir -p /tmp/nemo-models
        python scripts/copy_azure_file.py \
          --share-name fileshare \
          --file-path TestData/nemo2_ckpt/Llama3Config8B/pytorch_model.bin \
          --output-path /tmp/nemo-models/pytorch_model.bin
        ls -alh /tmp/nemo-models/pytorch_model.bin

    - name: Run tests
      working-directory: /app
      run: |
        pytest
